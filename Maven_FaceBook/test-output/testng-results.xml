<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="9" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-21T22:57:29 IST" name="Suite_1" finished-at="2023-02-21T22:58:32 IST" duration-ms="63079">
    <groups>
    </groups>
    <test started-at="2023-02-21T22:57:29 IST" name="ChromeTest" finished-at="2023-02-21T22:58:05 IST" duration-ms="36329">
      <class name="Package_TestNg.TestNg_ExecutionClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:57:29 IST" name="beforeTest" finished-at="2023-02-21T22:57:30 IST" duration-ms="1350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:57:30 IST" name="launchBrowser" finished-at="2023-02-21T22:57:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:57:30 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:57:32 IST" duration-ms="1795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyTermsLink()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:57:32 IST" name="verifyTermsLink" finished-at="2023-02-21T22:57:33 IST" duration-ms="643" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[target frame detached
  (failed to check if window was closed: disconnected: unable to send message to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea
*** Element info: {Using=xpath, value=//a[@id='terms-link']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: target frame detached
  (failed to check if window was closed: disconnected: unable to send message to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea
*** Element info: {Using=xpath, value=//a[@id='terms-link']}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at Pom_Classes.CreateNewAccountPage.clickOnTerms(CreateNewAccountPage.java:99)
at Package_TestNg.TestNg_ExecutionClass.verifyTermsLink(TestNg_ExecutionClass.java:94)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTermsLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:57:33 IST" name="afterMethod" finished-at="2023-02-21T22:58:05 IST" duration-ms="32425" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTermsLink status=FAILURE method=TestNg_ExecutionClass.verifyTermsLink()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: unable to connect to renderer
  (failed to check if window was closed: disconnected: unable to connect to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: unable to connect to renderer
  (failed to check if window was closed: disconnected: unable to connect to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.Utility.captureScreenShot(Utility.java:22)
at Package_TestNg.TestNg_ExecutionClass.afterMethod(TestNg_ExecutionClass.java:177)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="goOnLoginOrSignUpPage" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1677000485531" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyPrivacyPolicyLink()[pri:1, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="verifyPrivacyPolicyLink" finished-at="2023-02-21T22:58:05 IST" duration-ms="1" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: unable to connect to renderer
  (failed to check if window was closed: disconnected: unable to connect to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: unable to connect to renderer
  (failed to check if window was closed: disconnected: unable to connect to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.Utility.captureScreenShot(Utility.java:22)
at Package_TestNg.TestNg_ExecutionClass.afterMethod(TestNg_ExecutionClass.java:177)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrivacyPolicyLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="afterMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1677000485544" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="goOnLoginOrSignUpPage" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1677000485549" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyCookiesPolicyLink()[pri:2, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="verifyCookiesPolicyLink" finished-at="2023-02-21T22:58:05 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: unable to connect to renderer
  (failed to check if window was closed: disconnected: unable to connect to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: unable to connect to renderer
  (failed to check if window was closed: disconnected: unable to connect to renderer)
  (Session info: chrome=110.0.5481.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-ECIJOHCB', ip: '192.168.43.247', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.97, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\Avinash\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50890}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3a41b6835e71655995d2b00e6c2171ea
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.Utility.captureScreenShot(Utility.java:22)
at Package_TestNg.TestNg_ExecutionClass.afterMethod(TestNg_ExecutionClass.java:177)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCookiesPolicyLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="afterMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1677000485562" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="afterClass" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1677000485563" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@3ce1e309]" started-at="2023-02-21T22:58:05 IST" name="afterTest" finished-at="2023-02-21T22:58:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Package_TestNg.TestNg_ExecutionClass -->
      <class name="Package_TestNg.TestNg_Class">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:57:29 IST" name="beforeTest" finished-at="2023-02-21T22:57:29 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:57:30 IST" name="beforeClass" finished-at="2023-02-21T22:57:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:57:30 IST" name="beforeMethod" finished-at="2023-02-21T22:57:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:57:30 IST" name="test" finished-at="2023-02-21T22:57:30 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:57:30 IST" name="afterMethod" finished-at="2023-02-21T22:57:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:57:30 IST" name="afterClass" finished-at="2023-02-21T22:57:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Package_TestNg.TestNg_Class@7fa98a66]" started-at="2023-02-21T22:58:05 IST" name="afterTest" finished-at="2023-02-21T22:58:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Package_TestNg.TestNg_Class -->
    </test> <!-- ChromeTest -->
    <test started-at="2023-02-21T22:58:05 IST" name="FirefoxTest" finished-at="2023-02-21T22:58:15 IST" duration-ms="9625">
      <class name="Package_TestNg.TestNg_ExecutionClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:05 IST" name="beforeTest" finished-at="2023-02-21T22:58:08 IST" duration-ms="2432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:08 IST" name="launchBrowser" finished-at="2023-02-21T22:58:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:08 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:58:09 IST" duration-ms="1858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyTermsLink()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:09 IST" name="verifyTermsLink" finished-at="2023-02-21T22:58:10 IST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTermsLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:10 IST" name="afterMethod" finished-at="2023-02-21T22:58:10 IST" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTermsLink status=SUCCESS method=TestNg_ExecutionClass.verifyTermsLink()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:10 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:58:11 IST" duration-ms="1256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyPrivacyPolicyLink()[pri:1, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:11 IST" name="verifyPrivacyPolicyLink" finished-at="2023-02-21T22:58:12 IST" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrivacyPolicyLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:12 IST" name="afterMethod" finished-at="2023-02-21T22:58:12 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrivacyPolicyLink status=SUCCESS method=TestNg_ExecutionClass.verifyPrivacyPolicyLink()[pri:1, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:12 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:58:13 IST" duration-ms="1185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyCookiesPolicyLink()[pri:2, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:13 IST" name="verifyCookiesPolicyLink" finished-at="2023-02-21T22:58:14 IST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCookiesPolicyLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:14 IST" name="afterMethod" finished-at="2023-02-21T22:58:14 IST" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCookiesPolicyLink status=SUCCESS method=TestNg_ExecutionClass.verifyCookiesPolicyLink()[pri:2, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:14 IST" name="afterClass" finished-at="2023-02-21T22:58:15 IST" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@16d04d3d]" started-at="2023-02-21T22:58:15 IST" name="afterTest" finished-at="2023-02-21T22:58:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Package_TestNg.TestNg_ExecutionClass -->
      <class name="Package_TestNg.TestNg_Class">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:05 IST" name="beforeTest" finished-at="2023-02-21T22:58:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:08 IST" name="beforeClass" finished-at="2023-02-21T22:58:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:08 IST" name="test" finished-at="2023-02-21T22:58:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:08 IST" name="beforeMethod" finished-at="2023-02-21T22:58:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:08 IST" name="afterClass" finished-at="2023-02-21T22:58:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:08 IST" name="afterMethod" finished-at="2023-02-21T22:58:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Package_TestNg.TestNg_Class@564fabc8]" started-at="2023-02-21T22:58:15 IST" name="afterTest" finished-at="2023-02-21T22:58:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Package_TestNg.TestNg_Class -->
    </test> <!-- FirefoxTest -->
    <test started-at="2023-02-21T22:58:15 IST" name="EdgeTest" finished-at="2023-02-21T22:58:32 IST" duration-ms="17048">
      <class name="Package_TestNg.TestNg_ExecutionClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:15 IST" name="beforeTest" finished-at="2023-02-21T22:58:16 IST" duration-ms="1256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:16 IST" name="launchBrowser" finished-at="2023-02-21T22:58:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:16 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:58:20 IST" duration-ms="3501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyTermsLink()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:20 IST" name="verifyTermsLink" finished-at="2023-02-21T22:58:22 IST" duration-ms="2754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTermsLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:22 IST" name="afterMethod" finished-at="2023-02-21T22:58:22 IST" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTermsLink status=SUCCESS method=TestNg_ExecutionClass.verifyTermsLink()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:22 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:58:24 IST" duration-ms="1772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyPrivacyPolicyLink()[pri:1, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:24 IST" name="verifyPrivacyPolicyLink" finished-at="2023-02-21T22:58:27 IST" duration-ms="2949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrivacyPolicyLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:27 IST" name="afterMethod" finished-at="2023-02-21T22:58:27 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrivacyPolicyLink status=SUCCESS method=TestNg_ExecutionClass.verifyPrivacyPolicyLink()[pri:1, instance:Package_TestNg.TestNg_ExecutionClass@436813f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="goOnLoginOrSignUpPage()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:27 IST" name="goOnLoginOrSignUpPage" finished-at="2023-02-21T22:58:29 IST" duration-ms="2133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goOnLoginOrSignUpPage -->
        <test-method signature="verifyCookiesPolicyLink()[pri:2, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:29 IST" name="verifyCookiesPolicyLink" finished-at="2023-02-21T22:58:31 IST" duration-ms="2048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCookiesPolicyLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:31 IST" name="afterMethod" finished-at="2023-02-21T22:58:31 IST" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCookiesPolicyLink status=SUCCESS method=TestNg_ExecutionClass.verifyCookiesPolicyLink()[pri:2, instance:Package_TestNg.TestNg_ExecutionClass@436813f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:31 IST" name="afterClass" finished-at="2023-02-21T22:58:32 IST" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Package_TestNg.TestNg_ExecutionClass@436813f3]" started-at="2023-02-21T22:58:32 IST" name="afterTest" finished-at="2023-02-21T22:58:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Package_TestNg.TestNg_ExecutionClass -->
      <class name="Package_TestNg.TestNg_Class">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:57:29 IST" name="beforeSuite" finished-at="2023-02-21T22:57:29 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:15 IST" name="beforeTest" finished-at="2023-02-21T22:58:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:16 IST" name="beforeClass" finished-at="2023-02-21T22:58:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:16 IST" name="test" finished-at="2023-02-21T22:58:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:16 IST" name="beforeMethod" finished-at="2023-02-21T22:58:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:16 IST" name="afterMethod" finished-at="2023-02-21T22:58:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:16 IST" name="afterClass" finished-at="2023-02-21T22:58:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:32 IST" name="afterTest" finished-at="2023-02-21T22:58:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Package_TestNg.TestNg_Class@8f4ea7c]" started-at="2023-02-21T22:58:32 IST" name="afterSuite" finished-at="2023-02-21T22:58:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Package_TestNg.TestNg_Class -->
    </test> <!-- EdgeTest -->
  </suite> <!-- Suite_1 -->
</testng-results>
